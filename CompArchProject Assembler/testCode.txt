
% project test code
 lui 0x384
 addi r5, r1,20
 xor r3, r1, r5
 lw r1, r0, 0 % reg[1] <- mem[0]
 lw r2, r0, 1 % reg[2] <- mem[1]
 lw r3, r0, 2 % reg[3] <- mem[2]
 addi r4, r4, 10
 sub r4, r4, r4
 add r4, r2, r4
 slt r6, r2, r3
 beq r6, r0, 2 % if r6=r0 go forward 2 instructions
 add r2, r1, r2
 beq r0, r0, -5 % go back 5 instructions
 sw r4, r0, 0 % mem[0] <- reg[4]
 jal func
 sll r3, r2, r5
 add r5, r5, r5
 beq r0,r0,-1 % program is over, keep looping back to here
 func: or r5, r2, r3
 lw r1, r0, 0
 lw r2, r1,5 %reg[2] <- mem[60]
 lw r3 ,r1,6 %reg[3] <- mem[61]
 and r4, r2, r3
 sw r4, r0,0 %mem[0] <- reg[4]
 jr r7

% another programs %
% addi r1, r0, 2
% lw r2, r1, 1
% sw r2, r0, 0
% lw r3, r0, 0

% divide
%lw r1, r0, 0
%lw r2, r0, 1
%xor r3,r3,r3
%loop: blez r1, exit
%      sub r1, r1, r2
%      addi r3, r3, 1
%      j loop
%exit:sw r3,r0,2

